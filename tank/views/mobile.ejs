<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no" />
<title>3D坦克大战手机控制器</title>
<style>
html{
	height: 100%;
}
body{
	margin:0;
	padding:0;
	width: 100%;
	height: 100%;
}
.info{
	display: none;
}
.model{
	width: 40%;
	height: 40%;
	position: absolute;
	top: 50%;
	left: 50%;
	text-align: center;
}
.model .tankF{
	width: 20%;
	height: 50%;
	background: #0f0;
	margin: 0 auto;
}
.model .tankB{
	width: 100%;
	height: 50%;
	background: #0f0;
}

.test{
	width: 100px;
	height: 100px;
	border: 1px solid #0f0;
}
.mask .tankF{
	background: #afafaf;
}
.mask .tankB{
	background: #afafaf;
}

.fire .tankF{
	background: #f00;
}
.fire .tankB{
	background: #f00;
}
</style>

</head>
<body>
<div class="info">
	<div id="status" class="status"></div>
	<div id="test" class="test"></div>
	<div id="test2" class="test"></div>
	<div id="test3" class="test"></div>
	<div id="touch" class="test"></div>

</div>
<div id="mask" class="model mask">
	<div class="tankF"></div>
	<div class="tankB"></div>
</div>
<div id="model" class="model">
	<div class="tankF"></div>
	<div class="tankB"></div>
</div>
<script src="/socket.io/socket.io.js"></script>
<script>

var mask = $( 'mask' ),
	model = $( 'model' ),
	size = 50;
function resizePos(){
	mask.setAttribute( 'style', 'margin:-' + mask.clientHeight / 2 + 'px 0 0 -' + mask.clientWidth / 2 + 'px' );
	model.setAttribute( 'style', 'margin:-' + mask.clientHeight / 2 + 'px 0 0 -' + mask.clientWidth / 2 + 'px' );
}
resizePos();

window.onresize = function(){
	resizePos();
}

function setPos( f, t ){
	if( f == 1 ){
		model.style[ 'margin-top' ] = ( parseInt( mask.style[ 'margin-top' ] )  - size ) + 'px';
	} else if( f == -1 ){
		model.style[ 'margin-top' ] = ( parseInt( mask.style[ 'margin-top' ] )  + size ) + 'px';
	} else {
		model.style[ 'margin-top' ] = mask.style[ 'margin-top' ];
	}
	
	if( t == 1 ){
		model.style[ 'margin-left' ] = ( parseInt( mask.style[ 'margin-left' ] )  - size ) + 'px';
	} else if( t == -1 ){
		model.style[ 'margin-left' ] = ( parseInt( mask.style[ 'margin-left' ] )  + size ) + 'px';
	} else {
		model.style[ 'margin-left' ] = mask.style[ 'margin-left' ];
	}

}

var cid = <%= cid %>
var socket;
socket = io.connect('/');

function $( id ){
	return document.getElementById( id );
}

var statusDom = $( 'status'),
	test = $('test');

socket.on( 'toLinked', function(){
	statusDom.innerHTML =  'linked';
	init();
} );

var n = 0,
	flag = true;
var forward = 0,
	turn = 0,
	_f = 0,
	_t = 0;

function init(){

	if( window.DeviceOrientationEvent ) {//方向传感器
	
		window.addEventListener('deviceorientation', function( event ) {
			var alpha = Math.floor( event.alpha ),	//alpha：朝向，正北为0 ~ 360
				beta  = Math.floor( event.beta ),		//beta:手机竖向角度 -90 ~ 90
				gamma = Math.floor( event.gamma );	//gamma：手机倾斜角度
			
			if( flag ){
				test.innerHTML = 'Orientation - Alpha: ' + alpha + '<br>Beta: '+ beta + '<br>Gamma: ' + gamma ;
				//$( 'test3' ).innerHTML = n++;
				
				if( beta > 10 ){
					forward = 1;
				} else if( beta < -10 ){
					forward = -1;
				} else {
					forward = 0;
				}

				if( gamma < -10 ){
					turn = 1;
				} else if( gamma > 10 ){
					turn = -1;
				} else {
					turn = 0;
				}

				if( forward != _f || turn != _t ){
					setPos( forward, turn );
					socket.emit( 'moveM', { cid: cid, forward: forward, turn: turn } );
					_f = forward;
					_t = turn;
				}
				
			}
			flag = false;
			
		}, false );

	} else {
		$( 'model' ).innerHTML( '您手机浏览器不支持方向传感功能，无法控制坦克' );
	}

	document.ontouchstart = function(){
		$( 'touch' ).innerHTML = n++;
		$( 'model' ).className = 'model fire';
		socket.emit( 'hitMobile', { id: cid } );
		setTimeout( function(){
			$( 'model' ).className = 'model';
		}, 500 );
	}

}

setInterval( function(){

	flag = true

}, 50 );
</script>
</body>
</html>